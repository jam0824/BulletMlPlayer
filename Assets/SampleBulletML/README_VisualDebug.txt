# BulletML視覚的デバッグガイド

## 🐛 「X軸方向に飛んでいる」問題の確認方法

### 1. BulletTrajectoryVisualizerの設置

1. **空のGameObjectを作成**
   - Create → Create Empty
   - 名前: "TrajectoryVisualizer"

2. **スクリプトをアタッチ**
   - BulletTrajectoryVisualizerスクリプトを追加

3. **位置を設定**
   - BulletMlPlayerと同じ位置 (0, 0, 0) に配置

### 2. Scene Viewでの確認

#### 座標軸の見方
- **🔴 赤線**: X軸（横方向）
- **🟢 緑線**: Y軸（縦方向）  
- **🔵 青線**: Z軸（前後方向）

#### YZ面での期待される動き
```
sample02.xml (YZ面) の場合:
• 弾はY軸とZ軸方向にのみ移動
• X軸方向には一切移動しない
• 螺旋パターンはYZ平面上で展開
```

#### 弾の軌道表示
- **シアン線**: 理論的な弾の軌道
- **黄色い球**: 実際の弾の位置
- **マゼンタ線**: 弾の速度ベクトル

### 3. デバッグ情報の確認

#### Console Logの見方
```
新しい弾を追加: 位置=(0.00, 0.02, 5.00), 方向=23度, 速度=1
  → 速度ベクトル: (0.000, 0.921, 0.391) (座標系: YZ)
  → 期待される移動: X=0.000, Y=0.921, Z=0.391
```

**YZ面の正常な値:**
- X成分: **必ず0.000**
- Y成分: 正の値（上方向成分）
- Z成分: 正の値（前方向成分）

#### 異常な値の例
```
❌ 間違い: X=0.391, Y=0.921, Z=0.000  (XY面になっている)
❌ 間違い: X=0.391, Y=0.000, Z=0.921  (XZ面になっている)
✅ 正常:   X=0.000, Y=0.921, Z=0.391  (YZ面)
```

### 4. トラブルシューティング

#### 弾がX軸方向に移動している場合
1. **座標系設定の確認**
   - BulletMlPlayer → Coordinate System = YZ
   - sample02.xmlに `type="vertical"` が設定されているか

2. **実際の移動方向の確認**
   - Scene ViewでX軸（赤線）方向に弾が移動しているか
   - 速度ベクトルのX成分が0以外になっているか

3. **カメラアングルの確認**
   - Scene ViewのカメラアングルでZ軸移動をX軸移動と勘違いしていないか
   - カメラを上面から見下ろして確認

#### 弾が表示されない場合
1. **Bullet Prefabの設定確認**
2. **Enable Debug Logを有効にして、弾生成ログを確認**
3. **Max Bulletsの値を確認**

### 5. 期待される結果

**YZ面でのsample02.xml:**
- 螺旋状の弾幕がYZ平面上に展開
- 各弾の速度ベクトルのX成分は0
- 23度ずつ角度が増加
- 弾はY軸（上下）とZ軸（前後）方向に移動

### 6. 座標系の確認方法

```csharp
// ConvertAngleToVectorの期待値（YZ面）
0度   → (0, 1, 0)     // 上方向
90度  → (0, 0, 1)     // 前方向  
180度 → (0, -1, 0)    // 下方向
270度 → (0, 0, -1)    // 後方向
```

この方法で、実際に弾がどの軸方向に移動しているかを明確に確認できます。